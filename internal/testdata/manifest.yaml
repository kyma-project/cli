apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: kcp-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kcp-system/lifecycle-manager-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.2
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: kymas.operator.kyma-project.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: lifecycle-manager-webhook-service
          namespace: kcp-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: operator.kyma-project.io
  names:
    kind: Kyma
    listKind: KymaList
    plural: kymas
    singular: kyma
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: kyma-project.io/v1beta1 Kyma is deprecated. Use v1beta2 instead.
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kyma is the Schema for the kymas API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KymaSpec defines the desired state of Kyma.
              properties:
                channel:
                  description: Channel specifies the desired Channel of the Installation,
                    usually targeting different module versions.
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-z]+$
                  type: string
                modules:
                  description: Modules specifies the list of modules to be installed
                  items:
                    description: Module defines the components to be installed.
                    properties:
                      channel:
                        description: Channel is the desired channel of the Module. If
                          this changes or is set, it will be used to resolve a new ModuleTemplate
                          based on the new resolved resources.
                        maxLength: 32
                        minLength: 3
                        pattern: ^[a-z]+$
                        type: string
                      controller:
                        description: ControllerName is able to set the controller used
                          for reconciliation of the module. It can be used together
                          with Cache Configuration on the Operator responsible for the
                          templated Modules to split workload.
                        type: string
                      customResourcePolicy:
                        default: CreateAndDelete
                        description: CustomResourcePolicy determines how a ModuleTemplate
                          should be parsed. When CustomResourcePolicy is set to CustomResourcePolicyCreateAndDelete,
                          the Manifest will receive instructions to create it on installation
                          with the default values provided in ModuleTemplate, and to
                          remove it when the module or Kyma is deleted.
                        enum:
                          - CreateAndDelete
                          - Ignore
                        type: string
                      name:
                        description: "Name is a unique identifier of the module. It
                        is used to resolve a ModuleTemplate for creating a set of
                        resources on the cluster. \n Name can be one of 3 kinds: -
                        The ModuleName label value of the module-template, e.g. operator.kyma-project.io/module-name=my-module
                        - The Name or Namespace/Name of a ModuleTemplate, e.g. my-moduletemplate
                        or kyma-system/my-moduletemplate - The FQDN, e.g. kyma-project.io/module/my-module
                        as located in .spec.descriptor.component.name"
                        type: string
                      remoteModuleTemplateRef:
                        description: RemoteModuleTemplateRef is the reference (FQDN,
                          Namespace/Name, Module Name Label) to the module template
                          on the remote cluster. If specified, the module template will
                          be fetched from the SKR and reconciled.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                sync:
                  description: Active Synchronization Settings
                  properties:
                    enabled:
                      default: false
                      description: Enabled set to true will look up a kubeconfig for
                        the remote cluster based on the strategy and synchronize its
                        state there.
                      type: boolean
                    moduleCatalog:
                      default: true
                      description: ModuleCatalog set to true will cause a copy of all
                        ModuleTemplate in the cluster to be synchronized for discovery
                        purposes
                      type: boolean
                    namespace:
                      description: The target namespace, if empty the namespace is reflected
                        from the control plane Note that cleanup is currently not supported
                        if you are switching the namespace, so you will manually need
                        to clean up old synchronized Kymas
                      type: string
                    noModuleCopy:
                      default: true
                      description: NoModuleCopy set to true will cause the remote Kyma
                        to be initialized without copying over the module spec of the
                        control plane into the SKR
                      type: boolean
                    strategy:
                      default: secret
                      description: Strategy determines the way to look up the remotely
                        synced kubeconfig, by default it is fetched from a secret
                      type: string
                  type: object
              required:
                - channel
              type: object
            status:
              description: KymaStatus defines the observed state of Kyma
              properties:
                activeChannel:
                  description: Active Channel
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of a
                    ServiceInstance.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastOperation:
                  properties:
                    lastUpdateTime:
                      format: date-time
                      type: string
                    operation:
                      type: string
                  required:
                    - operation
                  type: object
                modules:
                  description: Contains essential information about the current deployed
                    module
                  items:
                    properties:
                      channel:
                        description: Channel tracks the active Channel of the Module.
                          In Case it changes, the new Channel will have caused a new
                          lookup to be necessary that maybe picks a different ModuleTemplate,
                          which is why we need to reconcile.
                        type: string
                      fqdn:
                        description: FQDN is the fully qualified domain name of the
                          module. In the ModuleTemplate it is located in .spec.descriptor.component.name
                          of the ModuleTemplate FQDN is used to calculate Namespace
                          and Name of the Manifest for tracking.
                        type: string
                      manifest:
                        description: Manifest contains the Information of a related
                          Manifest
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      message:
                        description: Message is a human-readable message indicating
                          details about the State.
                        type: string
                      name:
                        description: Name defines the name of the Module in the Spec
                          that the status is used for. It can be any kind of Reference
                          format supported by Module.Name.
                        type: string
                      resource:
                        description: Resource contains information about the created
                          module CR.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      state:
                        description: State of the Module in the currently tracked Generation
                        enum:
                          - Processing
                          - Deleting
                          - Ready
                          - Error
                          - ""
                        type: string
                      template:
                        description: It contains information about the last parsed ModuleTemplate
                          in Context of the Installation. This will update when Channel
                          or the ModuleTemplate is changed.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      version:
                        description: Channel tracks the active Version of the Module.
                        type: string
                    required:
                      - name
                      - state
                    type: object
                  type: array
                state:
                  description: State signifies current state of Kyma. Value can be one
                    of ("Ready", "Processing", "Error", "Deleting").
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                    - ""
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Kyma is the Schema for the kymas API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KymaSpec defines the desired state of Kyma.
              properties:
                channel:
                  description: Channel specifies the desired Channel of the Installation,
                    usually targeting different module versions.
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-z]+$
                  type: string
                modules:
                  description: Modules specifies the list of modules to be installed
                  items:
                    description: Module defines the components to be installed.
                    properties:
                      channel:
                        description: Channel is the desired channel of the Module. If
                          this changes or is set, it will be used to resolve a new ModuleTemplate
                          based on the new resolved resources.
                        maxLength: 32
                        minLength: 3
                        pattern: ^[a-z]+$
                        type: string
                      controller:
                        description: ControllerName is able to set the controller used
                          for reconciliation of the module. It can be used together
                          with Cache Configuration on the Operator responsible for the
                          templated Modules to split workload.
                        type: string
                      customResourcePolicy:
                        default: CreateAndDelete
                        description: CustomResourcePolicy determines how a ModuleTemplate
                          should be parsed. When CustomResourcePolicy is set to CustomResourcePolicyCreateAndDelete,
                          the Manifest will receive instructions to create it on installation
                          with the default values provided in ModuleTemplate, and to
                          remove it when the module or Kyma is deleted.
                        enum:
                          - CreateAndDelete
                          - Ignore
                        type: string
                      name:
                        description: "Name is a unique identifier of the module. It
                        is used to resolve a ModuleTemplate for creating a set of
                        resources on the cluster. \n Name can be one of 3 kinds: -
                        The ModuleName label value of the module-template, e.g. operator.kyma-project.io/module-name=my-module
                        - The Name or Namespace/Name of a ModuleTemplate, e.g. my-moduletemplate
                        or kyma-system/my-moduletemplate - The FQDN, e.g. kyma-project.io/module/my-module
                        as located in .spec.descriptor.component.name"
                        type: string
                      remoteModuleTemplateRef:
                        description: RemoteModuleTemplateRef is the reference (FQDN,
                          Namespace/Name, Module Name Label) to the module template
                          on the remote cluster. If specified, the module template will
                          be fetched from the SKR and reconciled.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
              required:
                - channel
              type: object
            status:
              description: KymaStatus defines the observed state of Kyma
              properties:
                activeChannel:
                  description: Active Channel
                  type: string
                conditions:
                  description: List of status conditions to indicate the status of a
                    ServiceInstance.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastOperation:
                  properties:
                    lastUpdateTime:
                      format: date-time
                      type: string
                    operation:
                      type: string
                  required:
                    - operation
                  type: object
                modules:
                  description: Contains essential information about the current deployed
                    module
                  items:
                    properties:
                      channel:
                        description: Channel tracks the active Channel of the Module.
                          In Case it changes, the new Channel will have caused a new
                          lookup to be necessary that maybe picks a different ModuleTemplate,
                          which is why we need to reconcile.
                        type: string
                      fqdn:
                        description: FQDN is the fully qualified domain name of the
                          module. In the ModuleTemplate it is located in .spec.descriptor.component.name
                          of the ModuleTemplate FQDN is used to calculate Namespace
                          and Name of the Manifest for tracking.
                        type: string
                      manifest:
                        description: Manifest contains the Information of a related
                          Manifest
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      message:
                        description: Message is a human-readable message indicating
                          details about the State.
                        type: string
                      name:
                        description: Name defines the name of the Module in the Spec
                          that the status is used for. It can be any kind of Reference
                          format supported by Module.Name.
                        type: string
                      resource:
                        description: Resource contains information about the created
                          module CR.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      state:
                        description: State of the Module in the currently tracked Generation
                        enum:
                          - Processing
                          - Deleting
                          - Ready
                          - Error
                          - ""
                        type: string
                      template:
                        description: It contains information about the last parsed ModuleTemplate
                          in Context of the Installation. This will update when Channel
                          or the ModuleTemplate is changed.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: PartialMeta is a subset of ObjectMeta that
                              contains relevant information to track an Object. see
                              https://github.com/kubernetes/apimachinery/blob/v0.26.1/pkg/apis/meta/v1/types.go#L111
                            properties:
                              generation:
                                description: A sequence number representing a specific
                                  generation of the desired state. Populated by the
                                  system. Read-only.
                                format: int64
                                type: integer
                              name:
                                description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: "Namespace defines the space within which
                                each name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                                type: string
                            type: object
                        type: object
                      version:
                        description: Channel tracks the active Version of the Module.
                        type: string
                    required:
                      - name
                      - state
                    type: object
                  type: array
                state:
                  description: State signifies current state of Kyma. Value can be one
                    of ("Ready", "Processing", "Error", "Deleting").
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                    - ""
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kcp-system/lifecycle-manager-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.2
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: manifests.operator.kyma-project.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: lifecycle-manager-webhook-service
          namespace: kcp-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: operator.kyma-project.io
  names:
    kind: Manifest
    listKind: ManifestList
    plural: manifests
    singular: manifest
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: kyma-project.io/v1beta1 Manifest is deprecated. Use v1beta2
        instead.
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Manifest is the Schema for the manifests API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ManifestSpec defines the desired state of Manifest.
              properties:
                config:
                  description: Config specifies OCI image configuration for Manifest
                  properties:
                    credSecretSelector:
                      description: CredSecretSelector is an optional field, for OCI
                        image saved in private registry, use it to indicate the secret
                        which contains registry credentials, must exist in the namespace
                        same as manifest
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: Name defines the Image name
                      type: string
                    ref:
                      description: Ref is either a sha value, tag or version
                      type: string
                    repo:
                      description: Repo defines the Image repo
                      type: string
                    type:
                      description: Type specifies the type of installation specification
                        that could be provided as part of a custom resource. This time
                        is used in codec to successfully decode from raw extensions.
                      enum:
                        - helm-chart
                        - oci-ref
                        - kustomize
                        - ""
                      type: string
                  type: object
                install:
                  description: Install specifies a list of installations for Manifest
                  properties:
                    name:
                      description: Name specifies a unique install name for Manifest
                      type: string
                    source:
                      description: Source can either be described as ImageSpec, HelmChartSpec
                        or KustomizeSpec
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                    - name
                    - source
                  type: object
                remote:
                  description: Remote indicates if Manifest should be installed on a
                    remote cluster
                  type: boolean
                resource:
                  description: Resource specifies a resource to be watched for state
                    updates
                  nullable: true
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - install
                - remote
              type: object
            status:
              description: ManifestStatus defines the observed state of Manifest.
              properties:
                conditions:
                  description: Conditions contain a set of conditionals to determine
                    the State of Status. If all Conditions are met, the State is expected
                    to be in StateReady.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastOperation:
                  description: LastOperation defines the last operation from the control-loop.
                  properties:
                    lastUpdateTime:
                      format: date-time
                      type: string
                    operation:
                      type: string
                  required:
                    - operation
                  type: object
                state:
                  description: State signifies current state of CustomObject. Value
                    can be one of ("Ready", "Processing", "Error", "Deleting").
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                  type: string
                synced:
                  description: Synced determine a list of Resources that are currently
                    actively synced. All resources that are synced are considered for
                    orphan removal on configuration changes, and it is used to determine
                    effective differences from one state to the next.
                  items:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      version:
                        type: string
                    required:
                      - group
                      - kind
                      - name
                      - namespace
                      - version
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Manifest is the Schema for the manifests API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ManifestSpec defines the desired state of Manifest.
              properties:
                config:
                  description: Config specifies OCI image configuration for Manifest
                  properties:
                    credSecretSelector:
                      description: CredSecretSelector is an optional field, for OCI
                        image saved in private registry, use it to indicate the secret
                        which contains registry credentials, must exist in the namespace
                        same as manifest
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    name:
                      description: Name defines the Image name
                      type: string
                    ref:
                      description: Ref is either a sha value, tag or version
                      type: string
                    repo:
                      description: Repo defines the Image repo
                      type: string
                    type:
                      description: Type specifies the type of installation specification
                        that could be provided as part of a custom resource. This time
                        is used in codec to successfully decode from raw extensions.
                      enum:
                        - helm-chart
                        - oci-ref
                        - kustomize
                        - ""
                      type: string
                  type: object
                install:
                  description: Install specifies a list of installations for Manifest
                  properties:
                    name:
                      description: Name specifies a unique install name for Manifest
                      type: string
                    source:
                      description: Source can either be described as ImageSpec, HelmChartSpec
                        or KustomizeSpec
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                    - name
                    - source
                  type: object
                remote:
                  description: Remote indicates if Manifest should be installed on a
                    remote cluster
                  type: boolean
                resource:
                  description: Resource specifies a resource to be watched for state
                    updates
                  nullable: true
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - install
                - remote
              type: object
            status:
              description: ManifestStatus defines the observed state of Manifest.
              properties:
                conditions:
                  description: Conditions contain a set of conditionals to determine
                    the State of Status. If all Conditions are met, the State is expected
                    to be in StateReady.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastOperation:
                  description: LastOperation defines the last operation from the control-loop.
                  properties:
                    lastUpdateTime:
                      format: date-time
                      type: string
                    operation:
                      type: string
                  required:
                    - operation
                  type: object
                state:
                  description: State signifies current state of CustomObject. Value
                    can be one of ("Ready", "Processing", "Error", "Deleting").
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                  type: string
                synced:
                  description: Synced determine a list of Resources that are currently
                    actively synced. All resources that are synced are considered for
                    orphan removal on configuration changes, and it is used to determine
                    effective differences from one state to the next.
                  items:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      version:
                        type: string
                    required:
                      - group
                      - kind
                      - name
                      - namespace
                      - version
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kcp-system/lifecycle-manager-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.2
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: moduletemplates.operator.kyma-project.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: lifecycle-manager-webhook-service
          namespace: kcp-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: operator.kyma-project.io
  names:
    kind: ModuleTemplate
    listKind: ModuleTemplateList
    plural: moduletemplates
    singular: moduletemplate
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: kyma-project.io/v1beta1 ModuleTemplate is deprecated. Use
        v1beta2 instead.
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ModuleTemplateSpec defines the desired state of ModuleTemplate.
              properties:
                channel:
                  description: Channel is the targeted channel of the ModuleTemplate.
                    It will be used to directly assign a Template to a target channel.
                    It has to be provided at any given time.
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-z]+$
                  type: string
                data:
                  description: Data is the default set of attributes that are used to
                    generate the Module. It contains a default set of values for a given
                    channel, and is thus different from default values allocated during
                    struct parsing of the Module. While Data can change after the initial
                    creation of ModuleTemplate, it is not expected to be propagated
                    to downstream modules as it is considered a set of default values.
                    This means that an update of the data block will only propagate
                    to new Modules created form ModuleTemplate, not any existing Module.
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
                descriptor:
                  description: "The Descriptor is the Open Component Model Descriptor
                  of a Module, containing all relevant information to correctly initialize
                  a module (e.g. Charts, Manifests, References to Binaries and/or
                  configuration) Name more information on Component Descriptors, see
                  https://github.com/open-component-model/ocm \n It is translated
                  inside the Lifecycle of the Cluster and will be used by downstream
                  controllers to bootstrap and manage the module. This part is also
                  propagated for every change of the template. This means for upgrades
                  of the Descriptor, downstream controllers will also update the dependant
                  modules (e.g. by updating the controller binary linked in a chart
                  referenced in the descriptor)"
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                target:
                  description: Target describes where the Module should later on be
                    installed if parsed correctly. It is used as installation hint by
                    downstream controllers to determine which client implementation
                    to use for working with the Module
                  enum:
                    - control-plane
                    - remote
                  type: string
              required:
                - channel
                - descriptor
                - target
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ModuleTemplateSpec defines the desired state of ModuleTemplate.
              properties:
                channel:
                  description: Channel is the targeted channel of the ModuleTemplate.
                    It will be used to directly assign a Template to a target channel.
                    It has to be provided at any given time.
                  maxLength: 32
                  minLength: 3
                  pattern: ^[a-z]+$
                  type: string
                data:
                  description: Data is the default set of attributes that are used to
                    generate the Module. It contains a default set of values for a given
                    channel, and is thus different from default values allocated during
                    struct parsing of the Module. While Data can change after the initial
                    creation of ModuleTemplate, it is not expected to be propagated
                    to downstream modules as it is considered a set of default values.
                    This means that an update of the data block will only propagate
                    to new Modules created form ModuleTemplate, not any existing Module.
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
                descriptor:
                  description: "The Descriptor is the Open Component Model Descriptor
                  of a Module, containing all relevant information to correctly initialize
                  a module (e.g. Charts, Manifests, References to Binaries and/or
                  configuration) Name more information on Component Descriptors, see
                  https://github.com/open-component-model/ocm \n It is translated
                  inside the Lifecycle of the Cluster and will be used by downstream
                  controllers to bootstrap and manage the module. This part is also
                  propagated for every change of the template. This means for upgrades
                  of the Descriptor, downstream controllers will also update the dependant
                  modules (e.g. by updating the controller binary linked in a chart
                  referenced in the descriptor)"
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - channel
                - descriptor
              type: object
          type: object
      served: true
      storage: false
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kcp-system/lifecycle-manager-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.2
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: watchers.operator.kyma-project.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: lifecycle-manager-webhook-service
          namespace: kcp-system
          path: /convert
      conversionReviewVersions:
        - v1
  group: operator.kyma-project.io
  names:
    kind: Watcher
    listKind: WatcherList
    plural: watchers
    singular: watcher
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: kyma-project.io/v1beta1 Watcher is deprecated. Use v1beta2
        instead.
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Watcher is the Schema for the watchers API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WatcherSpec defines the desired state of Watcher.
              properties:
                field:
                  description: Field describes the subresource that should be watched
                    Value can be one of ("spec", "status")
                  enum:
                    - spec
                    - status
                  type: string
                gateway:
                  description: Gateway configures the Istio Gateway for the VirtualService
                    that is created/updated during processing of the Watcher CR.
                  properties:
                    selector:
                      description: LabelSelector allows to select the Gateway using
                        label selectors as defined in the K8s LIST API.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - selector
                  type: object
                labelsToWatch:
                  additionalProperties:
                    type: string
                  description: LabelsToWatch describes the labels that should be watched
                  type: object
                serviceInfo:
                  description: ServiceInfo describes the service information of the
                    operator
                  properties:
                    name:
                      description: Name describes the service name.
                      type: string
                    namespace:
                      description: Namespace describes the service namespace.
                      type: string
                    port:
                      description: Port describes the service port.
                      format: int64
                      type: integer
                  required:
                    - name
                    - namespace
                    - port
                  type: object
              required:
                - field
                - gateway
                - labelsToWatch
                - serviceInfo
              type: object
            status:
              description: WatcherStatus defines the observed state of Watcher.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of a
                    Watcher.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                observedGeneration:
                  description: ObservedGeneration
                  format: int64
                  type: integer
                state:
                  description: State signifies current state of a Watcher. Value can
                    be one of ("Ready", "Processing", "Error", "Deleting")
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                    - ""
                  type: string
              required:
                - state
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Watcher is the Schema for the watchers API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WatcherSpec defines the desired state of Watcher.
              properties:
                field:
                  description: Field describes the subresource that should be watched
                    Value can be one of ("spec", "status")
                  enum:
                    - spec
                    - status
                  type: string
                gateway:
                  description: Gateway configures the Istio Gateway for the VirtualService
                    that is created/updated during processing of the Watcher CR.
                  properties:
                    selector:
                      description: LabelSelector allows to select the Gateway using
                        label selectors as defined in the K8s LIST API.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A
                            single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is "key",
                            the operator is "In", and the values array contains only
                            "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - selector
                  type: object
                labelsToWatch:
                  additionalProperties:
                    type: string
                  description: LabelsToWatch describes the labels that should be watched
                  type: object
                serviceInfo:
                  description: ServiceInfo describes the service information of the
                    operator
                  properties:
                    name:
                      description: Name describes the service name.
                      type: string
                    namespace:
                      description: Namespace describes the service namespace.
                      type: string
                    port:
                      description: Port describes the service port.
                      format: int64
                      type: integer
                  required:
                    - name
                    - namespace
                    - port
                  type: object
              required:
                - field
                - gateway
                - labelsToWatch
                - serviceInfo
              type: object
            status:
              description: WatcherStatus defines the observed state of Watcher.
              properties:
                conditions:
                  description: List of status conditions to indicate the status of a
                    Watcher.
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                observedGeneration:
                  description: ObservedGeneration
                  format: int64
                  type: integer
                state:
                  description: State signifies current state of a Watcher. Value can
                    be one of ("Ready", "Processing", "Error", "Deleting")
                  enum:
                    - Processing
                    - Deleting
                    - Ready
                    - Error
                    - ""
                  type: string
              required:
                - state
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-controller-manager
  namespace: kcp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-leader-election-role
  namespace: kcp-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
  - apiGroups:
      - cert-manager.io
    resources:
      - issuers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.istio.io
    resources:
      - gateways
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - networking.istio.io
    resources:
      - virtualservices
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - kymas
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - kymas/finalizers
    verbs:
      - update
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - kymas/status
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - moduletemplates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - moduletemplates/finalizers
    verbs:
      - update
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - watchers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - watchers/finalizers
    verbs:
      - update
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - watchers/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-manager-role-manifest
rules:
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - manifests
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - manifests/finalizers
    verbs:
      - update
  - apiGroups:
      - operator.kyma-project.io
    resources:
      - manifests/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-leader-election-rolebinding
  namespace: kcp-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lifecycle-manager-leader-election-role
subjects:
  - kind: ServiceAccount
    name: lifecycle-manager-controller-manager
    namespace: kcp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lifecycle-manager-manager-role
subjects:
  - kind: ServiceAccount
    name: lifecycle-manager-controller-manager
    namespace: kcp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-manager-rolebinding-manifest
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lifecycle-manager-manager-role-manifest
subjects:
  - kind: ServiceAccount
    name: lifecycle-manager-controller-manager
    namespace: kcp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-metrics-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lifecycle-manager-metrics-reader
subjects:
  - kind: ServiceAccount
    name: lifecycle-manager-controller-manager
    namespace: kcp-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 893110f7.kyma-project.io
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-manager-config
  namespace: kcp-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-metrics-service
  namespace: kcp-system
spec:
  ports:
    - appProtocol: http
      name: metrics
      port: 8080
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-webhook-service
  namespace: kcp-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-controller-manager
  namespace: kcp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: lifecycle-manager.kyma-project.io
      app.kubernetes.io/created-by: kustomize
      app.kubernetes.io/instance: kcp-lifecycle-manager-main
      app.kubernetes.io/managed-by: kustomize
      app.kubernetes.io/name: kcp-lifecycle-manager
      app.kubernetes.io/part-of: manual-deployment
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: lifecycle-manager.kyma-project.io
        app.kubernetes.io/created-by: kustomize
        app.kubernetes.io/instance: kcp-lifecycle-manager-main
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: kcp-lifecycle-manager
        app.kubernetes.io/part-of: manual-deployment
    spec:
      containers:
        - args:
            - --leader-elect
            - --enable-webhooks=true
          command:
            - /manager
          image: /lifecycle-manager:latest
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8082
              name: listener
            - containerPort: 8080
              name: metrics
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: lifecycle-manager-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-serving-cert
  namespace: kcp-system
spec:
  dnsNames:
    - lifecycle-manager-webhook-service.kcp-system.svc
    - lifecycle-manager-webhook-service.kcp-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: lifecycle-manager-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-selfsigned-issuer
  namespace: kcp-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kcp-system/lifecycle-manager-serving-cert
  labels:
    app.kubernetes.io/component: lifecycle-manager.kyma-project.io
    app.kubernetes.io/created-by: kustomize
    app.kubernetes.io/instance: kcp-lifecycle-manager-main
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kcp-lifecycle-manager
    app.kubernetes.io/part-of: manual-deployment
  name: lifecycle-manager-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: lifecycle-manager-webhook-service
        namespace: kcp-system
        path: /validate-operator-kyma-project-io-v1beta2-moduletemplate
    failurePolicy: Fail
    name: v1beta2.vmoduletemplate.kb.io
    rules:
      - apiGroups:
          - operator.kyma-project.io
        apiVersions:
          - v1beta2
        operations:
          - CREATE
          - UPDATE
        resources:
          - moduletemplates
    sideEffects: None
